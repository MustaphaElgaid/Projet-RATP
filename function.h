dataStation dataStationFunc(uint32_t vId,char* nameLigne,uint32_t cost,_Bool change);
station* newStation(dataStation vData);
listStation* newListStation();
void addStation(listStation* l,dataStation vData);
dataStation popStation(listStation* l);
stationFinale* newStationFinale(station *vStation);
listStationFinale* newListStationFinale();
void addStationFinale(listStationFinale* l,station *vStation,stationFinale* vStationFinalePrevious);
stationFinale* popStationFinale(listStationFinale* l);
uint32_t getFileElem(void);
uint32_t hashageFunction(uint32_t id);
tabHashageListStation* newtabHLS(uint32_t vSize);
void addStationTableHashage(tabHashageListStation* th);
dataStation extractDataStation(station* station);
_Bool casParticulier(listStation* l,station* vStation);
_Bool verifyIdMarque(listStation* l, dataStation data);
void printList(listStation* vListStation);
listStationFinale* principal(tabHashageListStation* th,uint32_t idSource,uint32_t idDestination);
void affichageFinale(listStationFinale* vListStationFinale);
_Bool isEmptyListStationFinale(listStationFinale *l);
_Bool isEmptyListStation(listStation *l);
void freeListStation(listStation *l);
void freeThLS(tabHashageListStation* th);
char* getNameStationById(uint32_t id);
void printFun(void);
void menu(void);
void printFileId(void);
listStation* inverser(listStation *vListStation);